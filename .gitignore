# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover

# GitHub workflows and actions (exclude from repository)
.github/

# Development and maintenance scripts (internal use only)
prepare_for_github.py
POLISH_SUMMARY.md
CHANGELOG.md
CONTRIBUTING.md
PROJECT_SUMMARY.md
REPOSITORY_STRUCTURE.md
.pre-commit-config.yaml
build.ps1
Makefile

# Jupyter notebook specific
.ipynb_checkpoints/
*/.ipynb_checkpoints/*
*.ipynb.orig

# Model artifacts and training outputs
models/*.pkl
models/*.joblib
models/*.json
models/trained_*
models/optuna_studies/
!models/.gitkeep

# CatBoost specific artifacts
notebooks/catboost_info/
catboost_info/
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project specific
models/*.pkl
models/*.joblib
models/*.json
models/trained_*
!models/.gitkeep

# Data files (keep structure but ignore large datasets)
data/raw/*.csv
data/raw/*.json
data/raw/*.zip
data/processed/*.csv
data/processed/*.parquet
!data/raw/.gitkeep
!data/processed/.gitkeep

# Reports and outputs (keep key visualizations, exclude generated reports)
reports/figures/*.png
reports/figures/*.jpg
reports/figures/*.pdf
reports/figures/*.html
reports/*.html
reports/*.pkl
!reports/figures/.gitkeep
# Keep specific visualization examples for README
!notebooks/reports/figures/correlation_matrix.png
!notebooks/reports/figures/rating_by_category.png

# Development documentation and scripts
build.ps1
Makefile
*.log
*.backup
*.bak

# Kaggle credentials and API keys
kaggle.json
.env
.env.local
*.key
*.pem

# Temporary files
*.tmp
*.temp
temp/
tmp/
scratch/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
